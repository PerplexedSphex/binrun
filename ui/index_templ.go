// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package ui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import (
	"fmt"
	"time"

	"github.com/a-h/templ"
	templruntime "github.com/a-h/templ/runtime"

	components "binrun/ui/components"
)

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Binrun Control Panel</title><!-- Open Props --><link rel=\"stylesheet\" href=\"https://unpkg.com/open-props/open-props.min.css\"><link rel=\"stylesheet\" href=\"https://unpkg.com/open-props/normalize.min.css\"><link rel=\"stylesheet\" href=\"https://unpkg.com/open-props/buttons.min.css\"><link rel=\"stylesheet\" href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("/static/style.css?v=" + fmt.Sprint(time.Now().Unix()))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `ui/index.templ`, Line: 23, Col: 91}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\"><!-- Datastar --><script type=\"module\" src=\"https://cdn.jsdelivr.net/gh/starfederation/datastar@v1.0.0-beta.11/bundles/datastar.js\">\n        </script></head><!-- ❶ declare signals ❷ bind grid template via data-attr --><body data-signals=\"{\n            &#34;sidebarW&#34;: 300,\n            &#34;rightW&#34;: 300,\n            &#34;bottomH&#34;: 200,\n            &#34;leftOpen&#34;: true,\n            &#34;rightOpen&#34;: true,\n            &#34;bottomOpen&#34;: true,\n            &#34;drag&#34;: null\n        }\" data-attr=\"{style: \n            &#39;grid-template-columns:&#39; +\n                $sidebarW + &#39;px &#39; +\n                ($leftOpen ? &#39;var(--handle-size)&#39; : &#39;0px&#39;) + &#39; &#39; +\n                &#39;1fr var(--handle-size) &#39; + $rightW + &#39;px;&#39; +\n            &#39;grid-template-rows:auto 1fr var(--handle-size) &#39; + $bottomH + &#39;px;&#39;\n        }\" data-persist data-on-load=\"@get(&#39;/ui&#39;, {openWhenHidden: true})\"><!-- sticky top bar --><header id=\"topbar\"><span class=\"brand\">./binrun</span><div class=\"panel-icons\"><button class=\"icon-button\" data-on-click=\"$leftOpen = !$leftOpen; $sidebarW = $leftOpen ? 300 : 0\" aria-label=\"Toggle left panel\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.PanelLeftToggle().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</button> <button class=\"icon-button\" data-on-click=\"$bottomOpen = !$bottomOpen; $bottomH = $bottomOpen ? 200 : 0 \" aria-label=\"Toggle bottom panel\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.PanelBottomToggle().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</button> <button class=\"icon-button\" data-on-click=\"$rightOpen = !$rightOpen; $rightW = $rightOpen ? 300 : 0\" aria-label=\"Toggle right panel\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.PanelRightToggle().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</button></div></header><!-- left sidebar --><aside id=\"left-panel\" data-show=\"$leftOpen\"><div id=\"left-panel-content\"></div></aside><!-- handle between left & main --><div class=\"handle-v handle-left\" data-show=\"$leftOpen\" data-on-pointerdown=\"\n                 $drag=&#39;left&#39;;\n                 evt.target.setPointerCapture(evt.pointerId);\n                 document.body.classList.add(&#39;dragging&#39;);\n             \" data-on-pointermove=\"\n                 $drag===&#39;left&#39; &amp;&amp;\n                   ($sidebarW = Math.min(\n                       Math.max(evt.clientX, 120),\n                       innerWidth - $rightW - 200\n                   ))\n             \" data-on-pointerup=\"\n                 $drag=null;\n                 document.body.classList.remove(&#39;dragging&#39;);\n             \"></div><!-- main panel --><main id=\"main-panel\"><div id=\"main-panel-content\"></div></main><!-- handle between main & right --><div class=\"handle-v handle-right\" data-show=\"$rightOpen\" data-on-pointerdown=\"\n                 $drag=&#39;right&#39;;\n                 evt.target.setPointerCapture(evt.pointerId);\n                 document.body.classList.add(&#39;dragging&#39;);\n             \" data-on-pointermove=\"\n                 $drag===&#39;right&#39; &amp;&amp;\n                   ($rightW = Math.min(\n                       Math.max(innerWidth - evt.clientX, 120),\n                       innerWidth - $sidebarW - 200\n                   ))\n             \" data-on-pointerup=\"\n                 $drag=null;\n                 document.body.classList.remove(&#39;dragging&#39;);\n             \"></div><!-- right sidebar --><aside id=\"right-panel\" data-show=\"$rightOpen\"><div id=\"right-panel-content\"></div></aside><!-- horizontal handle --><div class=\"handle-h handle-bottom\" data-show=\"$bottomOpen\" data-on-pointerdown=\"\n                 $drag=&#39;bottom&#39;;\n                 evt.target.setPointerCapture(evt.pointerId);\n                 document.body.classList.add(&#39;dragging&#39;);\n             \" data-on-pointermove=\"\n                 $drag===&#39;bottom&#39; &amp;&amp;\n                   ($bottomH = Math.min(\n                       Math.max(innerHeight - evt.clientY, 120),\n                       innerHeight - 150\n                   ))\n             \" data-on-pointerup=\"\n                 $drag=null;\n                 document.body.classList.remove(&#39;dragging&#39;);\n             \"></div><!-- bottom panel --><main id=\"bottom-panel\" data-show=\"$bottomOpen\"><div id=\"bottom-panel-content\"></div></main></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
